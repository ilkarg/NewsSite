<?php

include __DIR__ . "/app/PHPSystem/System.php";

use PHPSystem\System;

$commandList = ["create-controller", "create-model", "start"];

function printCommandList() {
    global $commandList;
    echo implode("\n", $commandList);
}

function getIndexForIncludeController(array $data, string $str) {
    $index = -1;
    for ($i = 0; $i < count($data); $i++) {
        if (System::endsWith(trim($data[$i]), $str)) {
            $index = $i;
        }
    }
    return $index;
}

function addController(string $controllerName) {
    $data = file("index.php");
    $index = getIndexForIncludeController($data, "Controller.php';");
    if ($index != -1) {
        $res = array_merge(array_slice($data, 0, $index + 1), ["include __DIR__ . '/controllers/$controllerName.php';\n"], array_slice($data, $index + 1, count($data)));
    } else {
        $index = getIndexForIncludeController($data, "bootstrap.php';");
        $res = array_merge(array_slice($data, 0, $index + 1), ["include __DIR__ . '/controllers/$controllerName.php';\n"], array_slice($data, $index + 1, count($data)));
    }

    file_put_contents("index.php", implode($res));
}

function runCommand() {
    global $argv;
    switch ($argv[1]) {
        case "create-controller":
            if (!isset($argv[2])) {
                echo "Недостаточно аргументов\nПример: php helper create-controller ExampleController";
                return;
            }
            if (!file_exists("controllers")) {
                mkdir("controllers");
            }
            file_put_contents("controllers/".$argv[2].".php", "<?php\n\nclass ".$argv[2]." {\n\t\n}");
            addController($argv[2]);
            break;
        case "create-model":
            if (!isset($argv[2])) {
                echo "Недостаточно аргументов\nПример: php helper create-model Example";
            }
            if (!file_exists("models")) {
                mkdir("models");
            }
            file_put_contents("models/".$argv[2].".php", "<?php\n\nnamespace Models;\n\nuse \\Illuminate\\Database\\Eloquent\\Model;\n\nclass ".$argv[2]." extends Model {\n\t\n}");
            break;
        case "start":
            if (isset($argv[2])) {
                exec("php -S 0.0.0.0:".intval($argv[2]));
            }
            exec("php -S 0.0.0.0:8000");
            break;
        default:
            printCommandList();
            break;
    }
}

runCommand();
